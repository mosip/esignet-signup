AddIdentity:
   Signup_AddIdentity_Password_Auth_smoke_Pos:
      endPoint: /v1/mock-identity-system/identity
      uniqueIdentifier: TC_IdRepo_Dependent_AddIdentityMock_01
      description: Add identity with password authentication
      role: idrepo
      restMethod: post
      inputTemplate: signup/AddIdentityMock/AddIdentity
      outputTemplate: signup/AddIdentityMock/addIdentityResult
      input: '{
	  "requesttime": "$TIMESTAMP$",
	  "individualId": "$RANDOMINDIVIDUALIDFORMOCKIDENTITY$",
	  "pin": "545411",
	  "email": "$EMAILIDFORMOCKIDENTITY$",
	  "password": "$PASSWORDFORMOCKIDENTITY$",
	  "phone": "$PHONEFORMOCKIDENTITY$"
}'
      output: '{
  "status":"mock identity data created successfully"
}'

   Signup_AddIdentity_L2_Valid_Parameters_smoke_Pos:
      endPoint: /v1/mock-identity-system/identity
      uniqueIdentifier: TC_IdRepo_Dependent_AddIdentityMock_02
      description: Creating the identity with id repo api
      role: idrepo
      restMethod: post
      inputTemplate: signup/AddIdentityMock/AddIdentity
      outputTemplate: signup/AddIdentityMock/addIdentityResult
      input: '{
	  "requesttime": "$TIMESTAMP$",
	  "individualId": "$RANDOMINDIVIDUALIDFORMOCKIDENTITY$",
	  "pin": "545411",
	  "email": "$EMAILIDFORMOCKIDENTITY$",
	  "password": "$PASSWORDFORMOCKIDENTITY$",
	  "phone": "$PHONEFORMOCKIDENTITY$"
}'
      output: '{
  "status":"mock identity data created successfully"
}'

   Signup_AddIdentity_L2_Valid_Parameters_smoke_Neg_Pos:
      endPoint: /v1/mock-identity-system/identity
      uniqueIdentifier: TC_IdRepo_Dependent_AddIdentityMock_03
      description: Creating the identity with id repo api
      role: idrepo
      restMethod: post
      inputTemplate: signup/AddIdentityMock/AddIdentity
      outputTemplate: signup/AddIdentityMock/addIdentityResult
      input: '{
	  "requesttime": "$TIMESTAMP$",
	  "individualId": "$RANDOMINDIVIDUALIDFORMOCKIDENTITY$",
	  "pin": "545411",
	  "email": "$EMAILIDFORMOCKIDENTITY$",
	  "password": "$PASSWORDFORMOCKIDENTITY$",
	  "phone": "$PHONEFORMOCKIDENTITY$"
}'
      output: '{
  "status":"mock identity data created successfully"
}'
   Signup_AddIdentity_L2_Valid_forGetSlot_disabilityTypeVISION_Parameters_smoke_Pos:
      endPoint: /v1/mock-identity-system/identity
      uniqueIdentifier: TC_IdRepo_Dependent_AddIdentityMock_04
      description: Add identity with password authentication for disabilityType VISION
      role: idrepo
      restMethod: post
      inputTemplate: signup/AddIdentityMock/AddIdentity
      outputTemplate: signup/AddIdentityMock/addIdentityResult
      input: '{
	  "requesttime": "$TIMESTAMP$",
	  "individualId": "$RANDOMINDIVIDUALIDFORMOCKIDENTITY$",
	  "pin": "545411",
	  "email": "$EMAILIDFORMOCKIDENTITY$",
	  "password": "$PASSWORDFORMOCKIDENTITY$",
	  "phone": "$PHONEFORMOCKIDENTITY$"
}'
      output: '{
  "status":"mock identity data created successfully"
}'
   Signup_AddIdentity_L2_Valid_forGetSlot_disabilityTypeAUDITORY_Parameters_smoke_Pos:
      endPoint: /v1/mock-identity-system/identity
      uniqueIdentifier: TC_IdRepo_Dependent_AddIdentityMock_05
      description: Add identity with password authentication for disabilityType AUDITORY
      role: idrepo
      restMethod: post
      inputTemplate: signup/AddIdentityMock/AddIdentity
      outputTemplate: signup/AddIdentityMock/addIdentityResult
      input: '{
	  "requesttime": "$TIMESTAMP$",
	  "individualId": "$RANDOMINDIVIDUALIDFORMOCKIDENTITY$",
	  "pin": "545411",
	  "email": "$EMAILIDFORMOCKIDENTITY$",
	  "password": "$PASSWORDFORMOCKIDENTITY$",
	  "phone": "$PHONEFORMOCKIDENTITY$"
}'
      output: '{
  "status":"mock identity data created successfully"
}'
   Signup_AddIdentity_L2_Valid_forGetSlot_disabilityTypeMOBILITY_Parameters_smoke_Pos:
      endPoint: /v1/mock-identity-system/identity
      uniqueIdentifier: TC_IdRepo_Dependent_AddIdentityMock_06
      description: Add identity with password authentication for disabilityType MOBILITY
      role: idrepo
      restMethod: post
      inputTemplate: signup/AddIdentityMock/AddIdentity
      outputTemplate: signup/AddIdentityMock/addIdentityResult
      input: '{
	  "requesttime": "$TIMESTAMP$",
	  "individualId": "$RANDOMINDIVIDUALIDFORMOCKIDENTITY$",
	  "pin": "545411",
	  "email": "$EMAILIDFORMOCKIDENTITY$",
	  "password": "$PASSWORDFORMOCKIDENTITY$",
	  "phone": "$PHONEFORMOCKIDENTITY$"
}'
      output: '{
  "status":"mock identity data created successfully"
}'
   Signup_AddIdentity_L2_Valid_forGetSlot_disabilityTypeNEUROLOGICAL_Parameters_smoke_Pos:
      endPoint: /v1/mock-identity-system/identity
      uniqueIdentifier: TC_IdRepo_Dependent_AddIdentityMock_07
      description: Add identity with password authentication for disabilityType NEUROLOGICAL
      role: idrepo
      restMethod: post
      inputTemplate: signup/AddIdentityMock/AddIdentity
      outputTemplate: signup/AddIdentityMock/addIdentityResult
      input: '{
	  "requesttime": "$TIMESTAMP$",
	  "individualId": "$RANDOMINDIVIDUALIDFORMOCKIDENTITY$",
	  "pin": "545411",
	  "email": "$EMAILIDFORMOCKIDENTITY$",
	  "password": "$PASSWORDFORMOCKIDENTITY$",
	  "phone": "$PHONEFORMOCKIDENTITY$"
}'
      output: '{
  "status":"mock identity data created successfully"
}'
   Signup_AddIdentity_L2_Valid_forGetSlot_disabilityTypeNEUROLOGICAL_forIdVerStatusWithoutWebsocket_Parameters_smoke_Pos:
      endPoint: /v1/mock-identity-system/identity
      uniqueIdentifier: TC_IdRepo_Dependent_AddIdentityMock_08
      description: Add identity for disabilityType NEUROLOGICAL forIdVerStatusWithoutWebsocket
      role: idrepo
      restMethod: post
      inputTemplate: signup/AddIdentityMock/AddIdentity
      outputTemplate: signup/AddIdentityMock/addIdentityResult
      input: '{
	  "requesttime": "$TIMESTAMP$",
	  "individualId": "$RANDOMINDIVIDUALIDFORMOCKIDENTITY$",
	  "pin": "545411",
	  "email": "$EMAILIDFORMOCKIDENTITY$",
	  "password": "$PASSWORDFORMOCKIDENTITY$",
	  "phone": "$PHONEFORMOCKIDENTITY$"
}'
      output: '{
  "status":"mock identity data created successfully"
}'
   Signup_AddIdentity_L2_Valid_forGetSlot_disabilityTypeNEUROLOGICAL_forIdTAuth_Parameters_smoke_Pos:
      endPoint: /v1/mock-identity-system/identity
      uniqueIdentifier: TC_IdRepo_Dependent_AddIdentityMock_09
      description: Add identity for disabilityType NEUROLOGICAL for IDT Auth
      role: idrepo
      restMethod: post
      inputTemplate: signup/AddIdentityMock/AddIdentity
      outputTemplate: signup/AddIdentityMock/addIdentityResult
      input: '{
	  "requesttime": "$TIMESTAMP$",
	  "individualId": "$RANDOMINDIVIDUALIDFORMOCKIDENTITY$",
	  "pin": "545411",
	  "email": "$EMAILIDFORMOCKIDENTITY$",
	  "password": "$PASSWORDFORMOCKIDENTITY$",
	  "phone": "$PHONEFORMOCKIDENTITY$"
}'
      output: '{
  "status":"mock identity data created successfully"
}'
   Signup_AddIdentity_L2_Valid_forGetSlot_disabilityTypeNEUROLOGICAL_for_DeletingCookies_smoke_Pos:
      endPoint: /v1/mock-identity-system/identity
      uniqueIdentifier: TC_IdRepo_Dependent_AddIdentityMock_10
      description: Add identity for disabilityType NEUROLOGICAL for deleting cookies
      role: idrepo
      restMethod: post
      inputTemplate: signup/AddIdentityMock/AddIdentity
      outputTemplate: signup/AddIdentityMock/addIdentityResult
      input: '{
	  "requesttime": "$TIMESTAMP$",
	  "individualId": "$RANDOMINDIVIDUALIDFORMOCKIDENTITY$",
	  "pin": "545411",
	  "email": "$EMAILIDFORMOCKIDENTITY$",
	  "password": "$PASSWORDFORMOCKIDENTITY$",
	  "phone": "$PHONEFORMOCKIDENTITY$"
}'
      output: '{
  "status":"mock identity data created successfully"
}'
   Signup_AddIdentity_L2_Valid_forPrepareSignUpRedirect_unauthenticated_smoke_Pos:
      endPoint: /v1/mock-identity-system/identity
      uniqueIdentifier: TC_IdRepo_Dependent_AddIdentityMock_11
      description: Add identity for PrepareSignUpRedirect
      role: idrepo
      restMethod: post
      inputTemplate: signup/AddIdentityMock/AddIdentity
      outputTemplate: signup/AddIdentityMock/addIdentityResult
      input: '{
	  "requesttime": "$TIMESTAMP$",
	  "individualId": "$RANDOMINDIVIDUALIDFORMOCKIDENTITY$",
	  "pin": "545411",
	  "email": "$EMAILIDFORMOCKIDENTITY$",
	  "password": "$PASSWORDFORMOCKIDENTITY$",
	  "phone": "$PHONEFORMOCKIDENTITY$"
}'
      output: '{
  "status":"mock identity data created successfully"
}'